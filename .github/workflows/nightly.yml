name: Nightly Build of AuroraEditor
on:
  push:
    branches: [ main ]
jobs:
  build_nightly_editor:
    runs-on: macos-12
    timeout-minutes: 15 # If a build exceeds 10 mins, it probably isn't ever going to complete
    steps:
      - uses: actions/checkout@v3
      
      - name: "Select Xcode 14.0"
        run: sudo xcode-select -s /Applications/Xcode_14.0.app
        
        ### Caching
      - uses: actions/cache@v2
        name: "Cache Derived Data"
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData/AuroraEditor-*/Build
            ~/Library/Developer/Xcode/DerivedData/AuroraEditor-*/SourcePackages
          key: ${{ runner.os }}-derivedData-cache-${{ hashFiles(
              'AuroraEditor.xcworkspace/xcshareddata/swiftpm/Package.resolved',
              'AuroraEditor.xcodeproj/xcshareddata/swiftpm/Package.resolved'
            ) }} # The xcworkspace will be removed soon
          restore-keys: |
            ${{ runner.os }}-derivedData-cache

      - name: Avoid inode changes for DerivedData
        run: defaults write com.apple.dt.XCBuild IgnoreFileSystemDeviceInodeChanges -bool YES
        
      - name: "Import Certificate: Development"
        uses: devbotsxyz/import-signing-certificate@main
        with:
          certificate-data: ${{ secrets.DEVELOPMENT_CERTIFICATE_DATA }}
          certificate-passphrase: ${{ secrets.DEVELOPMENT_CERTIFICATE_PASSPHRASE }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: "Import Certificate: Distribution"
        uses: devbotsxyz/import-signing-certificate@main
        with:
          certificate-data: ${{ secrets.DISTRIBUTION_CERTIFICATE_DATA }}
          certificate-passphrase: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSPHRASE }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: "Create Release Build Archive"
        run: | 
          set -o pipefail && xcodebuild -workspace AuroraEditor.xcworkspace -scheme AuroraEditorRelease -configuration Release archive -archivePath builds/AuroraEditor.xcarchive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO | xcpretty 
          
      - name: "Export Release Build"
        run: xcrun xcodebuild -exportArchive -exportOptionsPlist .github/export.plist -archivePath builds/AuroraEditor.xcarchive -exportPath builds
        
      - name: Install create-dmg
        run: npm install --global create-dmg
        
      - name: Make Release Dmg
        run: create-dmg builds/AuroraEditor.app

      - name: "notarytool submit"
        run: xcrun notarytool submit "Aurora Editor 1.0.dmg" --apple-id "${{ secrets.APPLEID_EMAIL }}" --password "${{ secrets.APPLEID_PASSWORD }}" --team-id "4V2D72S45C" --wait
        
      # - name: "Staple Release Build"
      # run: xcrun stapler staple "Aurora Editor 1.0.dmg"
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          # Artifact name
          name: AuroraEditor_Nightly # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: "Aurora Editor 1.0.dmg"
